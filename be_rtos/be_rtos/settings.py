"""
Django settings for be_rtos project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from datetime import timedelta
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

PROJECT_NAME = "BE_RTOS"

PYTHONUNBUFFERED = "CC"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-71p57sxnnfjr1h!2&r%qjb3+6fp!pa!#8g-m-_-b=(7cyu4ci*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

NGROK_URL = "https://yearly-casual-sawfly.ngrok-free.app"


ALLOWED_HOSTS = [
    f"10.10.1.{x}" for x in range(1, 255)
]

ALLOWED_HOSTS.append("*")

CORS_ORIGIN_ALLOW_ALL = True

ALLOWED_HOSTS.append("localhost")
ALLOWED_HOSTS.append("0.0.0.0")
ALLOWED_HOSTS.append("yearly-casual-sawfly.ngrok-free.app")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "rest_framework",
    "djoser",
    
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    "user",
    'home',
    "notifications",
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'django_extensions'
]

PROJECT_NAME = "BE_RTOS"
VERSION = "v1"
FRONTEND_URL = "http://localhost:3000"
BACKEND_URL = "http://10.10.1.126:8000"
LOCALHOST_URL = 'http://localhost:8000'

SPECTACULAR_SETTINGS = {
    'TITLE': f'{PROJECT_NAME} API',
    'DESCRIPTION': f'API documentation for {PROJECT_NAME} app',
    # CONTACT: Optional: MAY contain 'name', 'url', 'email'
    'CONTACT': {
        'name': f'{PROJECT_NAME}',
        'url': f'{FRONTEND_URL}',
    },
    # LICENSE: Optional: MUST contain 'name', MAY contain URL
    'LICENSE': {},
    'SERVERS': [{'url': f'{BACKEND_URL}', 'description': f'{VERSION}'},
                {'url': f'{NGROK_URL}', 'description': f'NGROK'},
                {'url': f'{LOCALHOST_URL}', 'description': f'LOCALHOST'},
                
                ],
    'VERSION': f'{VERSION}',
    'SERVE_INCLUDE_SCHEMA': False,
    'SWAGGER_UI_DIST': 'SIDECAR',
    'SWAGGER_UI_FAVICON_HREF': 'SIDECAR',
    # OTHER SETTINGS
    'SWAGGER_UI_SETTINGS': {
        'displayOperationId': True,
        'persistAuthorization': True,
        'filter': True,
        'tryItOutEnabled': True,
        'withCredentials': True,
    },
}

SWAGGER_SETTINGS = {
    'DEFAULT_INFO': 'be_rtos.urls.api_info',
    'SECURITY_DEFINITIONS': {
            'Bearer': {
                'type': 'oauth2',
                'name': 'Authorization',
                'in': 'header'
            }
        }
    
}

REST_FRAMEWORK = {
    'PAGE_SIZE': 100,
    'DEFAULT_PAGINATION_CLASS': 'core.pagination.DefaultPager',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    # Errors standardized
    'EXCEPTION_HANDLER': 'drf_standardized_errors.handler.exception_handler',
    # Swagger schema
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    # django-filters
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ],
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # this is default
    'guardian.backends.ObjectPermissionBackend',
)


AUTH_USER_MODEL = 'user.User'


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365),
    'UPDATE_LAST_LOGIN': True,
}



ROOT_URLCONF = 'be_rtos.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
        
    },
]

WSGI_APPLICATION = 'be_rtos.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'smarthome_db',
        'USER': 'root',
        'PASSWORD': '@Hung0112256',
        'HOST': 'mydb',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


MQTT_SERVER = "2759ffdd48794684beb3616485e2afb9.s1.eu.hivemq.cloud"
MQTT_USERNAME = "kit2512"
MQTT_PASSWORD = "Ohio@2022"
MQTT_AUTH = {
    "username": MQTT_USERNAME,
    "password": MQTT_PASSWORD
}

MQTT_PORT = 8883
MQTT_TOPIC = "mqtt"
CONTROL_TOPIC = "control_house"
MQTT_KEEPALIVE = 60

GAS_MIN = 40
TEMP_MIN = 30


MQTT_TLS = {
    "ca_certs": './home/ca_cert.crt',
}